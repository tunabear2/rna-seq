# DESeq2 사용을 위해 RSTUDIO 설치하기
# Rtools 다운로드 하기
https://cran.r-project.org/bin/windows/Rtools/
R 버전에 맞게 다운로드

# R에서 진행

# Bioconductor의 core packages 설치

# DESeq2 과정
if(!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("DESeq2")  #DESeq2 패키지 설치

install.packages("ggplot2") # volcano 등 기본 그래프
install.packages("dplyr")  # 전처리 편의
install.packages("tibble") # 전처리 편의
install.packages("data.table") # 대용량 빠른 처리
install.packages(c("ggrepel","patchwork","cowplot")) # volcano 라벨 겹치 방지와 그림 합치기/레이아웃용
install.packages("msigdbr")
BiocManager::install("pathview") # KEGG pathway 그림에 발현값 오버레이
BiocManager::install("apeglm") # log2FoldChange를 안정화 하는데 사용. volcano 품질이 올라감.
a
BiocManager::install("clusterProfiler") # GO, KEGG, GSEA 분석을 위한 도구
a
BiocManager::install("org.Hs.eg.db") # 인간 유전자 annotation DB
a
BiocManager::install("AnnotationDbi") # gene ID 변환용 도구
a
BiocManager::install("DOSE") # enrichment 분석용 내부 엔진 도구
a
BiocManager::install("fgsea") # GSEA 전용 패키지
a
BiocManager::install("enrichplot") # GO/KEGG/GSEA 결과 시각화용
a
BiocManager::install("pathview") # KEGG pathway 그림에 발현값 오버레이
a
BiocManager::install("ComplexHeatmap") # Heatmap 시각화
a
BiocManager::install("tximport") # rsem을 통해 생성된 데이터를 DESeq2 분석을 위한 table 데이터로 바꾸는 tool 한마디로 genes.results 불러오기
a
BiocManager::install("readr") # 나중에 csv,tsv 생성을 위한 tool
a
BiocManager::install("biomaRt") # Gene id symbol 설정.

library(DESeq2)
library(dplyr)
library(tibble)
library(ggplot2)
library(tximport)
library(readr)
library(apeglm)
library(ggrepel)
library(ComplexHeatmap)
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(fgsea)
library(pathview)
library(AnnotationDbi)
library(biomaRt)
library(circlize)
library(msigdbr)

samples <- c("SRR1039508","SRR1039509","SRR1039512","SRR1039513","SRR1039516","SRR1039517","SRR1039520","SRR1039521")

rsem_dir <- "C:/Users/rkawk/rsem"
files <- list.files(rsem_dir, pattern = "\\.genes\\.results$", full.names = TRUE)
stopifnot(length(files) > 1)

samples <- sub("\\.genes\\.results$", "", basename(files))
names(files) <- samples

condition <- factor(rep(c("Control","Treat"), times = length(samples)/2),
                    levels = c("Control","Treat"))

coldata <- data.frame(sample = samples, condition = condition, row.names = samples)

condition
data.frame(samples, condition) # 확인용

txi <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE,
                countsFromAbundance = "no")

txi$length[txi$length == 0] <- 1

dds <- DESeqDataSetFromTximport(txi = txi, colData = coldata, design = ~ condition)

dds <- DESeq(dds)

res <- results(dds, contrast = c("condition", "Treat", "Control"))
res <- lfcShrink(dds, coef = "condition_Treat_vs_Control", type = "apeglm")

res_df <- as.data.frame(res)
res_df$gene_id <- rownames(res_df)
