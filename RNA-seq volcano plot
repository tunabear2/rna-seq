# DESeq2 사용을 위해 RSTUDIO 설치하기
# Rtools 다운로드 하기
https://cran.r-project.org/bin/windows/Rtools/
R 버전에 맞게 다운로드

# R에서 진행

# Bioconductor의 core packages 설치

# DESeq2 과정
if(!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("DESeq2")  #DESeq2 패키지 설치

install.packages("ggplot2") # volcano 등 기본 그래프
install.packages("dplyr")  # 전처리 편의
install.packages("tibble") # 전처리 편의
install.packages("data.table") # 대용량 빠른 처리
install.packages(c("ggrepel","patchwork","cowplot")) # volcano 라벨 겹치 방지와 그림 합치기/레이아웃용
BiocManager::install("pathview") # KEGG pathway 그림에 발현값 오버레이
BiocManager::install("apeglm") # log2FoldChange를 안정화 하는데 사용. volcano 품질이 올라감.
a
BiocManager::install("clusterProfiler") # GO, KEGG, GSEA 분석을 위한 도구
a
BiocManager::install("org.Hs.eg.db") # 인간 유전자 annotation DB
a
BiocManager::install("AnnotationDbi") # gene ID 변환용 도구
a
BiocManager::install("DOSE") # enrichment 분석용 내부 엔진 도구
a
BiocManager::install("fgsea") # GSEA 전용 패키지
a
BiocManager::install("enrichplot") # GO/KEGG/GSEA 결과 시각화용
a
BiocManager::install("pathview") # KEGG pathway 그림에 발현값 오버레이
a
BiocManager::install("ComplexHeatmap") # Heatmap 시각화
a
BiocManager::install("tximport") # rsem을 통해 생성된 데이터를 DESeq2 분석을 위한 table 데이터로 바꾸는 tool 한마디로 genes.results 불러오기
a
BiocManager::install("readr") # 나중에 csv,tsv 생성을 위한 tool
a
BiocManager::install("biomaRt") # Gene id symbol 설정.

library(DESeq2)
library(dplyr)
library(tibble)
library(ggplot2)
library(tximport)
library(readr)
library(apeglm)
library(ggrepel)
library(ComplexHeatmap)
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(fgsea)
library(pathview)
library(AnnotationDbi)
library(biomaRt)

samples <- c("SRR1039508","SRR1039509","SRR1039512","SRR1039513",
             "SRR1039516","SRR1039517","SRR1039520","SRR1039521")

rsem_dir <- "C:/Users/rkawk/rsem"
files <- list.files(rsem_dir, pattern = "\\.genes\\.results$", full.names = TRUE)
stopifnot(length(files) > 1)

samples <- sub("\\.genes\\.results$", "", basename(files))
names(files) <- samples

condition <- factor(rep(c("Control","Treat"), times = length(samples)/2),
                    levels = c("Control","Treat"))

coldata <- data.frame(sample = samples, condition = condition, row.names = samples)

txi <- tximport(files, type = "rsem", txIn = FALSE, txOut = FALSE,
                countsFromAbundance = "no")
txi$length[txi$length == 0] <- 1

dds <- DESeqDataSetFromTximport(txi = txi, colData = coldata, design = ~ condition)
dds <- DESeq(dds)

res <- results(dds, contrast = c("condition", "Treat", "Control"))
res <- lfcShrink(dds, coef = "condition_Treat_vs_Control", type = "apeglm")

res_df <- as.data.frame(res) %>%
  tibble::rownames_to_column("gene_id") %>%
  mutate(log2fc = log2FoldChange,
         pval = padj) %>%
  filter(!is.na(pval))

mart <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")

map_bm <- getBM(
  attributes = c("ensembl_gene_id_version", "ensembl_gene_id", 
                 "hgnc_symbol", "entrezgene_id"),
  filters = "ensembl_gene_id_version",
  values = res_df$gene_id,
  mart = mart
)

map_bm <- distinct(map_bm, ensembl_gene_id_version, .keep_all = TRUE)

res_df <- res_df %>%
  left_join(map_bm, by = c("gene_id" = "ensembl_gene_id_version")) %>%
  mutate(symbol = ifelse(hgnc_symbol != "", hgnc_symbol, gene_id),
         entrez = entrezgene_id)

lfc_cut <- 0.6
fdr_cut <- 0.05

res_df <- res_df %>%
  mutate(
    diffexpressed = case_when(
      pval < fdr_cut & log2fc >= lfc_cut ~ "Up",
      pval < fdr_cut & log2fc <= -lfc_cut ~ "Down",
      TRUE ~ "NS"
    )
  )

topN <- 15
label_top <- res_df %>%
  filter(diffexpressed != "NS") %>%
  arrange(pval) %>%
  head(topN) %>%
  pull(symbol)

res_df <- res_df %>%
  mutate(
    delabel = ifelse(symbol %in% label_top, symbol, NA_character_)
  )

volcanoplot <- ggplot(res_df, aes(x = log2fc, y = -log10(pval),
                                  color = diffexpressed, label = delabel)) +
  geom_vline(xintercept = c(-lfc_cut, lfc_cut), color = "gray", linetype = "dashed") +
  geom_hline(yintercept = -log10(fdr_cut), color = "gray", linetype = "dashed") +
  geom_point(size = 2, alpha = 0.9, stroke = 0) +
  scale_color_manual(values = c("Down" = "#79A9E1", "NS" = "grey70", "Up" = "#8B2B2B"),
                     labels = c("Down" = "Downregulated",
                                "NS" = "Not significant",
                                "Up" = "Upregulated")) +
  labs(color = "Group",
       x = expression("log"[2]*"FC (shrunk)"),
       y = expression("-log"[10]*"FDR (padj)"),
       title = "Volcano plot: Treat(test) vs Control(original)") +
  coord_cartesian(ylim = c(0, NA), xlim = c(-10, 10)) +
  scale_x_continuous(breaks = seq(-10, 10, by = 2)) +
  theme_minimal(base_size = 12) +
  theme(
    legend.position = "right",
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank(),
    plot.title = element_text(face = "bold", hjust = 0.5),
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.6)
  ) +
  geom_text_repel(max.overlaps = Inf, na.rm = TRUE, box.padding = 0.4, point.padding = 0.2,
                  size = 3, segment.color = "grey60", min.segment.length = 0)

print(volcanoplot)
